{{!-- @Inject("method", "{{pluginCamelCase}}Plugin", "registerHooks", "end") --}}
		// Generated by AtavismServerDocker generator
		this.register{{messageCamelCase}}Hook();
{{!-- @Inject("class", "{{pluginCamelCase}}Plugin", "end") --}}

	/**
		* Register {{messageCamelCase}}Hook
		* Generated by AtavismDockerServer generator
		*/
	protected void register{{messageCamelCase}}Hook()
	{
		getHookManager().addHook({{pluginCamelCase}}Client.MSG_TYPE_{{pluginCapitalizedSnakeCase}}_{{messageCapitalizedSnakeCase}},
				new {{messageCamelCase}}Hook());
		MessageTypeFilter filter = new MessageTypeFilter();
		filter.addType({{pluginCamelCase}}Client.MSG_TYPE_{{pluginCapitalizedSnakeCase}}_{{messageCapitalizedSnakeCase}});
		Engine.getAgent().createSubscription(filter, this);
	}
	
	/**
		* {{messageCamelCase}}Hook
		* Generated by AtavismServerDocker generator
		*/
	class {{messageCamelCase}}Hook implements Hook {
		public boolean processMessage(Message msg, int flags) {
			log.info("{{messageCamelCase}} triggered!");
			ExtensionMessage gmMsg = (ExtensionMessage) msg;

			return true;
		}
	}
